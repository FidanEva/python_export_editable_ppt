{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alima\\\\Projects\\\\python_export_ppt\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm() {\n  _s();\n  const [excels, setExcels] = useState([]);\n  const [image, setImage] = useState(null);\n  const [customText, setCustomText] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (const file of excels) {\n      formData.append(\"excel_files\", file);\n    }\n    formData.append(\"image\", image);\n    formData.append(\"custom_text\", customText);\n    const response = await axios.post(\"http://localhost:8000/generate-ppt/\", formData, {\n      responseType: 'blob'\n    });\n\n    // Download file\n    const blob = new Blob([response.data], {\n      type: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = \"report.pptx\";\n    a.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: e => setExcels([...e.target.files]),\n      accept: \".xlsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setImage(e.target.files[0]),\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: customText,\n      onChange: e => setCustomText(e.target.value),\n      placeholder: \"Enter custom text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Generate PPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"ghhz+RivvoCSf3ASGPLBhTj/PPw=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","excels","setExcels","image","setImage","customText","setCustomText","handleSubmit","e","preventDefault","formData","FormData","file","append","response","post","responseType","blob","Blob","data","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","onSubmit","children","multiple","onChange","target","files","accept","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/alima/Projects/python_export_ppt/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UploadForm() {\r\n  const [excels, setExcels] = useState([]);\r\n  const [image, setImage] = useState(null);\r\n  const [customText, setCustomText] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    for (const file of excels) {\r\n      formData.append(\"excel_files\", file);\r\n    }\r\n    formData.append(\"image\", image);\r\n    formData.append(\"custom_text\", customText);\r\n\r\n    const response = await axios.post(\"http://localhost:8000/generate-ppt/\", formData, {\r\n      responseType: 'blob',\r\n    });\r\n\r\n    // Download file\r\n    const blob = new Blob([response.data], { type: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = \"report.pptx\";\r\n    a.click();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"file\" multiple onChange={e => setExcels([...e.target.files])} accept=\".xlsx\" />\r\n      <input type=\"file\" onChange={e => setImage(e.target.files[0])} accept=\"image/*\" />\r\n      <input type=\"text\" value={customText} onChange={e => setCustomText(e.target.value)} placeholder=\"Enter custom text\" />\r\n      <button type=\"submit\">Generate PPT</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}